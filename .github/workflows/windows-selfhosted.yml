name: Windows (self-hosted MSYS2 MinGW64)

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: CMAKE_BUILD_TYPE (Debug/Release)
        required: false
        default: Debug

jobs:
  windows-msys2:
    # Match your runner labels: use your custom label ANYKS
    runs-on: [ self-hosted, ANYKS ]
    steps:
      - uses: actions/checkout@v4

      - name: Print runner info
        shell: cmd
        run: |
          echo Runner OS: %RUNNER_OS%
          if exist "C:\msys64" (echo MSYS2 path exists: True) else (echo MSYS2 path exists: False)

      - name: Prepare MSYS2 environment (MINGW64)
        shell: cmd
        run: |
          echo BASH=C:\msys64\usr\bin\bash.exe>> "%GITHUB_ENV%"
          echo MSYSTEM=MINGW64>> "%GITHUB_ENV%"
          echo CHERE_INVOKING=1>> "%GITHUB_ENV%"

      - name: Select MSYS2 shell (mingw64 preferred)
        shell: cmd
        run: |
          if exist "C:\msys64\mingw64.exe" (set BASH=C:\msys64\mingw64.exe)
          if not exist "C:\msys64\mingw64.exe" (set BASH=C:\msys64\usr\bin\bash.exe)
          echo BASH=%BASH%>> "%GITHUB_ENV%"

      - name: Ensure E:\io exists
        shell: cmd
        run: |
          if not exist "E:\io" mkdir "E:\io"

      - name: Tool versions
        shell: cmd
        run: |
          "%BASH%" -lc "export PATH=/mingw64/bin:/usr/bin:$PATH; gcc --version; cmake --version; (ninja --version || true); (mingw32-make --version || true)"

      - name: Configure (MSYS2 MinGW64)
        shell: cmd
        run: |
          "%BASH%" -lc "export PATH=/mingw64/bin:/usr/bin:$PATH; BUILD_WIN='E:/io'; BUILD=$(cygpath -u \"$BUILD_WIN\"); if command -v ninja >/dev/null 2>&1; then GEN='Ninja'; else GEN='MinGW Makefiles'; fi; echo Using generator: $GEN; cmake -S . -B \"$BUILD\" -G \"$GEN\" -DCMAKE_BUILD_TYPE=${{ github.event.inputs.build_type }} -DIO_BUILD_TESTS=OFF -DIO_BUILD_EXAMPLES=ON"

      - name: Build (MSYS2 MinGW64)
        shell: cmd
        run: |
          "%BASH%" -lc "export PATH=/mingw64/bin:/usr/bin:$PATH; BUILD_WIN='E:/io'; BUILD=$(cygpath -u \"$BUILD_WIN\"); cmake --build \"$BUILD\" -j"

      - name: List build outputs
        shell: cmd
        run: |
          dir E:\\io

      - name: Upload artifacts (binaries)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: windows-mingw64-${{ github.run_id }}
          path: |
            E:\\io\**
          if-no-files-found: warn
